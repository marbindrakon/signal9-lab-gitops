apiVersion: batch/v1
kind: Job
metadata:
  name: sync-loki-odf-secret
  annotations:
    argocd.argoproj.io/hook: "PostSync"
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  namespace: openshift-gitops
spec:
  template:
    spec:
      containers:
      - name: sync-odf-secret
        command:
            - /bin/bash
            - -c
            - |
              echo "Reading secret data from ODF sources"
              BUCKET_HOST=$(oc get -n openshift-logging configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_HOST}')
              BUCKET_NAME=$(oc get -n openshift-logging configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_NAME}')
              BUCKET_PORT=$(oc get -n openshift-logging configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_PORT}')
              ACCESS_KEY_ID=$(oc get -n openshift-logging secret loki-bucket-odf -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d)
              SECRET_ACCESS_KEY=$(oc get -n openshift-logging secret loki-bucket-odf -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 -d)
              echo "Generating loki object storage secret"
              oc create -n openshift-logging secret generic logging-loki-odf \
                --from-literal=access_key_id="${ACCESS_KEY_ID}" \
                --from-literal=access_key_secret="${SECRET_ACCESS_KEY}" \
                --from-literal=bucketnames="${BUCKET_NAME}" \
                --from-literal=endpoint="https://${BUCKET_HOST}:${BUCKET_PORT}" \
                --dry-run=client -o yaml | oc apply -f -

        image: "registry.redhat.io/openshift4/ose-cli:latest"
      serviceAccount: openshift-gitops-argocd-application-controller
      serviceAccountName: openshift-gitops-argocd-application-controller
      restartPolicy: Never
