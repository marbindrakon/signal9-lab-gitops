apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-managed-gitops-okd
  namespace: rhacm-hub
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-managed-argocd-subscription-okd
        spec:
          remediationAction: enforce
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: operators.coreos.com/v1alpha1
                kind: Subscription
                metadata:
                  name: argocd-operator
                  namespace: openshift-operators
                spec:
                  config:
                    env:
                      - name: ARGOCD_CLUSTER_CONFIG_NAMESPACES
                        value: argocd
                  channel: alpha
                  installPlanApproval: Automatic
                  name: argocd-operator
                  source: community-operators
                  sourceNamespace: openshift-marketplace
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Namespace
                metadata:
                  name: argocd
                spec: {}
            - complianceType: musthave
              objectDefinition:
                apiVersion: argoproj.io/v1alpha1
                kind: ArgoCD
                metadata:
                  name: cluster-argo
                  namespace: argocd
                spec:
                  applicationSet:
                    resources:
                      limits:
                        cpu: "2"
                        memory: 1Gi
                      requests:
                        cpu: 250m
                        memory: 512Mi
                    webhookServer:
                      ingress:
                        enabled: false
                      route:
                        enabled: false
                  controller:
                    processors: {}
                    resources:
                      limits:
                        cpu: "2"
                        memory: 2Gi
                      requests:
                        cpu: 250m
                        memory: 1Gi
                    sharding: {}
                  grafana:
                    enabled: false
                    ingress:
                      enabled: false
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 250m
                        memory: 128Mi
                    route:
                      enabled: false
                  ha:
                    enabled: false
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 250m
                        memory: 128Mi
                  initialSSHKnownHosts: {}
                  monitoring:
                    enabled: false
                  notifications:
                    enabled: false
                  prometheus:
                    enabled: false
                    ingress:
                      enabled: false
                    route:
                      enabled: false
                  rbac:
                    policy: |
                      g, system:cluster-admins, role:admin
                      g, cluster-admins, role:admin
                      g, global-admins, role:admin
                    scopes: '[groups]'
                  redis:
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 250m
                        memory: 128Mi
                  repo:
                    resources:
                      limits:
                        cpu: "1"
                        memory: 1Gi
                      requests:
                        cpu: 250m
                        memory: 256Mi
                  resourceExclusions: |
                    - apiGroups:
                      - tekton.dev
                      clusters:
                      - '*'
                      kinds:
                      - TaskRun
                      - PipelineRun
                  server:
                    autoscale:
                      enabled: false
                    grpc:
                      ingress:
                        enabled: false
                    ingress:
                      enabled: false
                    insecure: true
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 125m
                        memory: 128Mi
                    route:
                      enabled: true
                      tls:
                        insecureEdgeTerminationPolicy: Redirect
                        termination: edge
                    service:
                      type: ""
                  sso:
                    dex:
                      openShiftOAuth: true
                      resources:
                        limits:
                          cpu: 500m
                          memory: 256Mi
                        requests:
                          cpu: 250m
                          memory: 128Mi
                    provider: dex
                  tls:
                    ca: {}
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-managed-argocd-clusterrolebinding-okd
        spec:
          remediationAction: enforce
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                kind: ClusterRoleBinding
                apiVersion: rbac.authorization.k8s.io/v1
                metadata:
                  name: gitops-cluster-admin
                subjects:
                  - kind: ServiceAccount
                    name: argocd-cluster-argocd-application-controller
                    namespace: argocd
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: cluster-admin
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-cluster-configs-appset-okd
        spec:
          remediationAction: enforce
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - openshift-gitops
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: argoproj.io/v1alpha1
                kind: ApplicationSet
                metadata:
                  name: cluster-base-configs
                  namespace: argocd
                spec:
                  generators:
                  - git:
                      repoURL: "https://github.com/marbindrakon/signal9-lab-gitops.git"
                      revision: HEAD
                      directories:
                      - path: argocd/clusters/managed-clusters/{{hub .ManagedClusterName hub}}/live/base-configs
                  template:
                    metadata:
                      name: '{{ "{{ path.basename }}" }}'
                    spec:
                      project: default
                      syncPolicy:
                        automated: {}
                      destination:
                        namespace: argocd
                        server: "https://kubernetes.default.svc"
                      source:
                        repoURL: "https://github.com/marbindrakon/signal9-lab-gitops.git"
                        targetRevision: HEAD
                        path: '{{ "{{ path }}" }}'
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-managed-gitops-okd
  namespace: rhacm-hub
placementRef:
  name: placement-policy-managed-gitops-okd
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: policy-managed-gitops-okd
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-managed-gitops-okd
  namespace: rhacm-hub
spec:
  clusterConditions:
    - status: "True"
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - { key: spoke-gitops, operator: In, values: ["true"] }
      - { key: gitops-type, operator: In, values: ["okd"] }
